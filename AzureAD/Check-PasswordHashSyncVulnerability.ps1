function Check-PasswordHashSyncVulnerability {
    param (
        [Parameter(Mandatory=$true)]
        [string] $AccessToken
    )

    $result = @{
        ItemNumber = "AADS020"
        UseCase = "Password Hash Sync Vulnerability"
        WeightedScore = 9.09
        TechnicalInformation = "Password Hash Synchronization (PHS) involves synchronizing password hashes between on-premises and cloud directories, such as Azure AD. Vulnerabilities in PHS can expose password hashes to unauthorized access, potentially leading to credential theft or compromise. Checking for PHS vulnerabilities involves ensuring that synchronization processes are secure, password hashes are properly protected, and appropriate access controls are in place to mitigate the risk of exploitation."
        Category = "Authentication & Permission Policies"
        TechnicalDetails = $null # will fullfill later 
        RemedediationSolution = 
        "Ensure Azure AD Connect is not using insecure configurations, and review SYNC_ account permissions and MSOL_ users. Take necessary actions to secure these configurations."
        MITREMapping = "[MITRE] T1552: Unsecured Credentials"
        Status = $null
        ErrorMsg = $null 
    }
    

    try {
        $findings = @()

        # Step 1: Check if Azure AD Connect is installed
        $adSyncService = Get-Service -Name "ADSync" -ErrorAction SilentlyContinue
        if ($adSyncService) {
            $findings += "Azure AD Connect is installed."
        } else {
            $findings += "Azure AD Connect is not installed."
        }

        # Step 2: Check for MSOL_ attribute identity users
        $msolUsers = Get-ADUser -Filter "SamAccountName -like 'MSOL_*'" -Properties * | Select SamAccountName
        if ($msolUsers) {
            $findings += "Found users with MSOL_ attribute identity:"
            $findings += $msolUsers | ForEach-Object { $_.SamAccountName }
        } else {
            $findings += "No users with MSOL_ attribute identity found."
        }

        # Step 3: Check for SYNC_ account with password reset capabilities in Azure AD
        # Assuming necessary Azure AD module and access token
        $aadConnectUri = "https://graph.microsoft.com/v1.0/servicePrincipals"
        $servicePrincipals = Invoke-RestMethod -Uri $aadConnectUri -Method Get -Headers @{
            Authorization = "Bearer $AccessToken"
        }

        $syncAccount = $servicePrincipals.value | Where-Object { $_.displayName -match 'Sync_' }
        if ($syncAccount) {
            $passwordResetEnabled = $syncAccount.appRoles | Where-Object { $_.value -eq "Reset Password" }
            if ($passwordResetEnabled) {
                $findings += "SYNC_ account has password reset permissions in Azure AD."
            } else {
                $findings += "SYNC_ account does not have password reset permissions in Azure AD."
            }
        } else {
            $findings += "No SYNC_ accounts found in Azure AD."
        }

        # Determine the status and summary based on findings
        if ($adSyncService -and $msolUsers -and $syncAccount) {
            $result.Status = "Fail"
            $result.TechnicalDetails = "Vulnerability detected: All conditions for a Password Hash Synchronization vulnerability are present."
        } else {
            $result.Status = "Pass"
            $result.TechnicalDetails = "No vulnerability detected: Not all conditions for a Password Hash Synchronization vulnerability are present."
        }

        $result.Findings = $findings
    }
    catch {
        $result.TechnicalDetails = "Error: $($_.Exception.Message)"
        $result.Status = "Error"
    }

    return $result
}

$accessToken = $args[0]

$result = Check-PasswordHashSyncVulnerability -AccessToken $accessToken

Write-Output $result | ConvertTo-Json -Depth 10